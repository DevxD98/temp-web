#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void swap(char *a, char *b) {
    char temp = *a;
    *a = *b;
    *b = temp;
}

void reverse(char *start, char *end) {
    while (start < end) {
        swap(start, end);
        start++;
        end--;
    }
}

int findNextPermutation(char *num) {
    int length = strlen(num);

    // Find the rightmost digit that is smaller than the digit to its right
    int i = length - 2;
    while (i >= 0 && num[i] >= num[i + 1]) {
        i--;
    }

    // If no such digit is found, the number is the largest possible permutation
    if (i == -1) {
        return 0;
    }

    // Find the smallest digit to the right of i that is larger than num[i]
    int j = length - 1;
    while (num[j] <= num[i]) {
        j--;
    }

    // Swap num[i] and num[j]
    swap(&num[i], &num[j]);

    // Reverse the digits to the right of i
    reverse(&num[i + 1], &num[length - 1]);

    return 1;
}

int main() {
    char num[20]; // Assuming a maximum length of 20 for the input number
    printf("Enter a number: ");
    scanf("%s", num);

    if (findNextPermutation(num)) {
        printf("The smallest number greater than %s with the same set of digits is: %s\n", num, num);
    } else {
        printf("There is no such number. %s is the largest possible permutation.\n", num);
    }

    return 0;
}
